{"version":3,"sources":["venues.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;IAEM,M;;;;;;;;;;;sCAEc;AAChB,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB,CAAsB,iBAAS;AACpC,YAAM,SAAS,MAAM,KAAN,CAAY,cAA3B;AACA,YAAM,OAAO,MAAM,IAAnB;AACA,YAAI,cAAJ;AACA,YAAI,cAAJ;;AAEA,YAAI,UAAU,OAAO,KAArB,EAA4B;AAC1B,cAAI,SAAS,uCAAK,KAAQ,OAAO,KAAP,CAAa,CAAb,EAAgB,MAAxB,eAAwC,OAAO,KAAP,CAAa,CAAb,EAAgB,MAA7D,EAAuE,KAAI,aAA3E,GAAb;AACD,SAFD,MAEM;AACJ,cAAI,UAAS,uCAAK,KAAI,yBAAT,EAAmC,KAAI,iBAAvC,GAAb;AACD;;AAED,YAAI,QAAQ,KAAK,CAAL,EAAQ,KAApB,EAA2B;AACzB,cAAI,SAAS;AAAA;AAAA;AAAA;AAAc,iBAAK,CAAL,EAAQ,KAAR,CAAc;AAA5B,WAAb;AACD,SAFD,MAEO;AACL,cAAI,UAAS;AAAA;AAAA;AAAA;AAAA,WAAb;AACD;;AAED,eAAO;AAAA;AAAA,YAAI,KAAK,MAAM,KAAN,CAAY,IAArB;AACE;AAAA;AAAA;AAAI,kBAAM,KAAN,CAAY;AAAhB,WADF;AAEG,eAFH;AAGE;AAAA;AAAA;AAAA;AAAe,kBAAM,KAAN,CAAY;AAA3B,WAHF;AAIE;AAAA;AAAA;AAAA;AAAgB,kBAAM,KAAN,CAAY,QAAZ,CAAqB;AAArC,WAJF;AAKG;AALH,SAAP;AAOD,OAzBM,CAAP;AA0BD;;;6BAEQ;;AAEP,UAAM,OAAO,KAAK,eAAL,EAAb;;AAEA,UAAI,CAAC,KAAK,KAAL,CAAW,MAAhB,EAAwB;AACtB,eACE;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAED,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACG;AADH;AADF,OADF;AAOD;;;;;;AAGH,OAAO,SAAP,GAAmB;AACjB,UAAQ,gBAAM,SAAN,CAAgB,KAAhB,CAAsB;AADb,CAAnB;;AAIA,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC9B,SAAO;AACL,YAAQ,MAAM,MAAN,CAAa;AADhB,GAAP;AAGD;;kBAEc,yBAAQ,eAAR,EAAyB,MAAzB,C","file":"venues-compiled.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nclass Venues extends Component {\n\n  renderListItems() {\n    return this.props.venues.map(venue => {\n      const photos = venue.venue.featuredPhotos;\n      const tips = venue.tips;\n      let image;\n      let likes;\n\n      if (photos && photos.items) {\n        let image = (<img src={`${photos.items[0].prefix}300x200${photos.items[0].suffix}`} alt=\"Venue image\"/>);\n      }else {\n        let image = (<img src=\"./assets/snack-logo.svg\" alt=\"snackshack logo\"/>)\n      }\n\n      if (tips && tips[0].likes) {\n        let likes = (<span>Likes: {tips[0].likes.count}</span>);\n      } else {\n        let likes = (<span>Likes: 0</span>);\n      }\n\n      return <li key={venue.venue.name}>\n               <p>{venue.venue.name}</p>\n               {image}\n               <span>Rating: {venue.venue.rating}</span>\n               <span>Address: {venue.venue.location.address}</span>\n               {likes}\n             </li>;\n    });\n  }\n\n  render() {\n\n    const list = this.renderListItems();\n\n    if (!this.props.venues) {\n      return (\n        <div>Loading...</div>\n      );\n    }\n\n    return (\n      <div>\n        <ul>\n          {list}\n        </ul>\n      </div>\n    );\n  }\n}\n\nVenues.propTypes = {\n  venues: React.PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    venues: state.venues.venues\n  };\n}\n\nexport default connect(mapStateToProps)(Venues);"]}